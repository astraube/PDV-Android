apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'realm-android'

// Credit: http://jeremie-martinez.com/2015/05/05/inject-host-gradle/
def getIP() {
    InetAddress result = null;
    Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();
    while (interfaces.hasMoreElements()) {
        Enumeration<InetAddress> addresses = interfaces.nextElement().getInetAddresses();
        while (addresses.hasMoreElements()) {
            InetAddress address = addresses.nextElement();
            if (!address.isLoopbackAddress()) {
                if (address.isSiteLocalAddress()) {
                    return address.getHostAddress();
                } else if (result == null) {
                    result = address;
                }
            }
        }
    }
    return (result != null ? result : InetAddress.getLocalHost()).getHostAddress();
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId 'com.autazcloud'
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 3
        versionName "1.2.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        // This will automatically try to detect the IP address of the machine
        // building the example. It is assumed that this machine is also running
        // the Object Server. If not, replace 'host' with the IP of the machine
        // hosting the server. In some cases the wrong IP address will also
        // be detected. In that case also insert the IP address manually.
        def host = getIP()
        debug {
            buildConfigField "String", "SERVER_HOST", "\"${host}/Laravel_projects/autaz-pdv-web-admin/public\""
            //buildConfigField "String", "SERVER_HOST", '"api.autaz.me"'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_HOST", '"api.autaz.me"'
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'org.apache.commons:commons-lang3:3.4'
    // // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:animated-vector-drawable:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.github.clans:fab:1.6.4'
    compile 'com.github.danielemaddaluno.androidupdatechecker:library:1.0.2'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.google.dagger:dagger:2.0.2'
    compile 'com.jakewharton:butterknife:8.6.0'
    // https://github.com/JakeWharton/butterknife
    compile 'com.squareup:otto:1.3.8'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    // http://square.github.io/retrofit/
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'javax.annotation:jsr250-api:1.0'
    compile 'cn.pedant.sweetalert:library:1.3'
    // https://github.com/pedant/sweet-alert-dialog
    compile 'com.github.florent37:materialtextfield:1.0.7'
    compile 'org.fabiomsr:moneytextview:1.1.0'
    compile 'com.github.faranjit:currency-edittext:1.0.1'
    compile 'com.pddstudio:encrypted-preferences:1.3.0'
    // https://github.com/PDDStudio/EncryptedPreferences
    compile 'com.google.firebase:firebase-messaging:11.0.1'
    compile 'info.hoang8f:android-segmented:1.0.6'
    // https://github.com/Kaopiz/android-segmented
    //compile 'de.hdodenhof:circleimageview:2.1.0' //https://github.com/hdodenhof/CircleImageView
    compile 'com.dynamitechetan.flowinggradient:flowinggradient:1.1'
    compile 'com.github.iammert:MaterialIntroView:1.6.0' // https://github.com/iammert/MaterialIntroView
    compile 'com.getkeepsafe.taptargetview:taptargetview:1.9.1' //https://github.com/KeepSafe/TapTargetView
    compile 'com.github.Pierry:SimpleToast:v1.7' //https://github.com/Pierry/SimpleToast
    compile files('libs/ePOS-Print.jar')
    //provided 'org.glassfish:javax.annotation:10.0-b28' // http://www.jsonschema2pojo.org/
    testCompile 'junit:junit:4.12'
    //annotationProcessor 'com.google.dagger:dagger-compiler:2.0.2'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'
}

//apply plugin: 'com.google.gms.google-services'
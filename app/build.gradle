buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'realm-android'

// Credit: http://jeremie-martinez.com/2015/05/05/inject-host-gradle/
def getIP() {
    InetAddress result = null;
    Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();
    while (interfaces.hasMoreElements()) {
        Enumeration<InetAddress> addresses = interfaces.nextElement().getInetAddresses();
        while (addresses.hasMoreElements()) {
            InetAddress address = addresses.nextElement();
            if (!address.isLoopbackAddress()) {
                if (address.isSiteLocalAddress()) {
                    return address.getHostAddress();
                } else if (result == null) {
                    result = address;
                }
            }
        }
    }
    return (result != null ? result : InetAddress.getLocalHost()).getHostAddress();
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    useLibrary 'org.apache.http.legacy'
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId 'br.com.i9algo.autaz.pdv'
        minSdkVersion 16
        targetSdkVersion 24
        //renderscriptTargetApi 18
        //renderscriptSupportModeEnabled true
        versionCode 8
        versionName "1.7.1"
        /*ndk {
            abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }*/
    }
    buildTypes {
        // This will automatically try to detect the IP address of the machine
        // building the example. It is assumed that this machine is also running
        // the Object Server. If not, replace 'host' with the IP of the machine
        // hosting the server. In some cases the wrong IP address will also
        // be detected. In that case also insert the IP address manually.
        def host = getIP()
        debug {
            //minifyEnabled true
            //useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "SERVER_HOST", "\"${host}/Laravel_projects/autaz-pdv-web-admin/public\""
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_HOST", '"api.autaz.me"'
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
    }
    /*productFlavors {
        arm7 {
            // in the future, ndk.abiFilter might also work
            ndk {
                abiFilter 'armeabi-v7a'
            }
        }
        arm8 {
            ndk {
                abiFilters 'arm64-v8a'
            }
        }
        arm {
            ndk {
                abiFilter 'armeabi'
            }
        }
        x86 {
            ndk {
                abiFilter 'x86'
            }
        }
        x86_64 {
            ndk {
                abiFilter 'x86_64'
            }
        }
        mips {
            ndk {
                abiFilters 'mips', 'mips64'
            }
        }
        universal {
            ndk {
                abiFilters 'mips', 'mips64', 'x86', 'x86_64'
            }
        }
    }*/
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/ePOS2.jar')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:animated-vector-drawable:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    //compile 'com.google.android.gms:play-services:11.4.2'
    compile 'com.google.firebase:firebase-core:11.0.1'
    compile 'com.google.firebase:firebase-messaging:11.0.1'
    // https://github.com/firebase/firebase-jobdispatcher-android
    compile 'com.firebase:firebase-jobdispatcher:0.6.0'
    compile "com.mixpanel.android:mixpanel-android:5.0.2"
    compile 'org.apache.commons:commons-lang3:3.4'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.github.danielemaddaluno.androidupdatechecker:library:1.0.2'
    compile 'com.google.dagger:dagger:2.0.2'
    compile 'com.jakewharton:butterknife:8.6.0'
    // https://github.com/JakeWharton/butterknife
    compile 'com.squareup:otto:1.3.8'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    // http://square.github.io/retrofit/
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'javax.annotation:jsr250-api:1.0'
    compile 'com.github.florent37:materialtextfield:1.0.7'
    compile 'org.fabiomsr:moneytextview:1.1.0'
    compile 'com.github.faranjit:currency-edittext:1.0.1'
    compile 'com.pddstudio:encrypted-preferences:1.3.0'
    // https://github.com/PDDStudio/EncryptedPreferences
    compile 'info.hoang8f:android-segmented:1.0.6'
    // https://github.com/Kaopiz/android-segmented

    //compile 'de.hdodenhof:circleimageview:2.1.0' //https://github.com/hdodenhof/CircleImageView
    compile 'com.dynamitechetan.flowinggradient:flowinggradient:1.1'
    compile 'com.github.iammert:MaterialIntroView:1.6.0'
    // https://github.com/iammert/MaterialIntroView

    //compile 'com.getkeepsafe.taptargetview:taptargetview:1.9.1' //https://github.com/KeepSafe/TapTargetView
    compile 'com.github.Pierry:SimpleToast:v1.7'
    //https://github.com/Pierry/SimpleToast
    compile 'cn.pedant.sweetalert:library:1.3'
    // https://github.com/pedant/sweet-alert-dialog

    compile 'com.afollestad.material-dialogs:core:0.9.4.5' //https://github.com/afollestad/material-dialogs
    compile 'com.afollestad.material-dialogs:commons:0.9.4.5'

    //provided 'org.glassfish:javax.annotation:10.0-b28' // http://www.jsonschema2pojo.org/

    //annotationProcessor 'com.google.dagger:dagger-compiler:2.0.2'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:answers:1.3.13@aar') {
        transitive = true;
    }
    // Testing dependencies
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support:support-annotations:25.3.1'
}

apply plugin: 'com.google.gms.google-services'